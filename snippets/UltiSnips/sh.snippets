

snippet head "Header"
#!/bin/bash - 
# vim: set filetype=sh:
#===============================================================================
#
#          FILE: `!p snip.rv=fn`
# 
#   DESCRIPTION: ${1:Description}
# 
#       CREATED: `date +%d\ %b\ %Y`.
#
#        AUTHOR: Anthony Dervish
#
#===============================================================================

set -o nounset                              # Treat unset variables as an error

endsnippet

snippet scriptdir "Get Script Directory"
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}"  )" && pwd -P )"

$0
endsnippet

snippet secstart "Section Start" b
#===============================================================================
# ${1:SectionName}
#===============================================================================

${0}

endsnippet

snippet tmpfile "New tmpfile"
${1:TmpFile}=`mktemp /tmp/$(basename $0).$$.XXXXXX` || exit 1
endsnippet


snippet tmpdir "New tempdir"
${1:TempDir}=`mktemp -d /tmp/$(basename $0).$$.XXXXXX` || exit 1
endsnippet


snippet subsect "Sub-section" b
#-${1/./-/g}
# ${1:SectionName}
#-${1/./-/g}
endsnippet

snippet fun "Function" b

#===  FUNCTION  ================================================================
#         NAME:  ${1:Name}
#  DESCRIPTION:  ${2:Description}
#===============================================================================

function ${1} ()
{
	$0
}

endsnippet

snippet args "Parse command-line arguments"

#===  FUNCTION  ================================================================
#         NAME:  usage
#  DESCRIPTION:  Display usage information.
#===============================================================================
function usage ()
{
    cat <<- EOT

${1:Description}

    Usage: \$\{0##/*/} [options] [--]

    Options: 
        -h  Display this message

EOT
}

#-----------------------------------------------------------------------
#  Handle command line arguments
#-----------------------------------------------------------------------

while getopts ":hv" opt
do
  case $opt in
    h )  usage; exit 0   ;;
    \? )  echo -e "\n  Option does not exist : $OPTARG\n"
          usage; exit 1   ;;
  esac
done

shift $(($OPTIND-1))

endsnippet


# vim:ft=snippets:
